[{"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\index.js":"1","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\reportWebVitals.js":"2","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\App.js":"3","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Firebase\\index.js":"4","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\signuppage.js":"5","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\notfound.js":"6","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\editorpage.js":"7","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\homepage.js":"8","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\signinpage.js":"9","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\passwordpage.js":"10","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Firebase\\context.js":"11","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Firebase\\firebase.js":"12","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Navigation\\index.js":"13","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\toolbar\\Toolbar.js":"14","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\editor\\Editor.js":"15","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\SignUp\\index.js":"16","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\SignIn\\index.js":"17","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\PasswordForget\\index.js":"18","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Navigation\\AppBarDrawer.js":"19","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\SignOut\\index.js":"20","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\UserInfo\\userInfo.js":"21"},{"size":788,"mtime":1613076945439,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1611594797822,"results":"24","hashOfConfig":"23"},{"size":1834,"mtime":1613694782991,"results":"25","hashOfConfig":"23"},{"size":169,"mtime":1613076945385,"results":"26","hashOfConfig":"23"},{"size":350,"mtime":1613076945428,"results":"27","hashOfConfig":"23"},{"size":161,"mtime":1613076945426,"results":"28","hashOfConfig":"23"},{"size":400,"mtime":1613694783231,"results":"29","hashOfConfig":"23"},{"size":251,"mtime":1613694783232,"results":"30","hashOfConfig":"23"},{"size":461,"mtime":1613694783246,"results":"31","hashOfConfig":"23"},{"size":367,"mtime":1613694783238,"results":"32","hashOfConfig":"23"},{"size":434,"mtime":1613076945384,"results":"33","hashOfConfig":"23"},{"size":1388,"mtime":1613694783061,"results":"34","hashOfConfig":"23"},{"size":1177,"mtime":1613694783087,"results":"35","hashOfConfig":"23"},{"size":20126,"mtime":1613696242328,"results":"36","hashOfConfig":"23"},{"size":1269,"mtime":1613694783220,"results":"37","hashOfConfig":"23"},{"size":3122,"mtime":1613694783169,"results":"38","hashOfConfig":"23"},{"size":2545,"mtime":1613694783141,"results":"39","hashOfConfig":"23"},{"size":1883,"mtime":1613694783112,"results":"40","hashOfConfig":"23"},{"size":8324,"mtime":1613694783081,"results":"41","hashOfConfig":"23"},{"size":560,"mtime":1613694783148,"results":"42","hashOfConfig":"23"},{"size":127,"mtime":1613694783181,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"b9by2i",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\index.js",[],["95","96"],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\reportWebVitals.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\App.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Firebase\\index.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\signuppage.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\notfound.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\editorpage.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\homepage.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\signinpage.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\passwordpage.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Firebase\\context.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Firebase\\firebase.js",["97"],"import app from 'firebase/app';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\n\r\n/*\r\nImplementation of Firebase connectivity. \r\nWe can define the config function in an .env file later so we can add it\r\nto our gitinore file so our credentials aren't exposed. \r\n*/\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBOL0tgT4Kj73E67Y7IhLVw7x2OXU7yyDA\",\r\n    authDomain: \"note-flow-60166.firebaseapp.com\",\r\n    projectId: \"note-flow-60166\",\r\n    storageBucket: \"note-flow-60166.appspot.com\",\r\n    messagingSenderId: \"229776630736\",\r\n    appId: \"1:229776630736:web:14b929733fa37c629ecfd5\",\r\n    measurementId: \"G-B2S22DDZTV\"\r\n  };\r\n\r\n  class Firebase{\r\n      constructor(){\r\n    \r\n\r\n           \r\n          app.initializeApp(config);\r\n          this.auth = app.auth();\r\n          this.database =app.database();\r\n      \r\n      }//constructor\r\n    \r\n\r\n    // *** Auth API ***\r\n     doCreateUserWithEmailAndPassword = (email, password) =>\r\n     this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n     doSignInWithEmailAndPassword = (email, password) =>\r\n     this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n     doSignOut = () => this.auth.signOut();\r\n\r\n     doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n \r\n     doPasswordUpdate = password =>\r\n       this.auth.currentUser.updatePassword(password);\r\n\r\n \r\n\r\n}//class\r\n\r\n  export default Firebase;\r\n","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Navigation\\index.js",["98"],"import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport SignOutButton from '../SignOut';\r\nimport AppBarDrawer from \"./AppBarDrawer\";\r\n\r\nconst Navigation = ({ authUser }) => (\r\n    <div>{authUser ? <NavigationAuth /> : <NavigationNonAuth />}</div>\r\n  );\r\n\r\n\r\n\r\n//Links the user sees if they are authenticated by our authentification API - Currently Home, Editor, and Sign Out button\r\nconst NavigationAuth = () =>  (\r\n\r\n\r\n    <AppBarDrawer/>\r\n\r\n  \r\n  );\r\n\r\n  //Links users see if they are not authenticated - currently all links and sign out button \r\n  const NavigationNonAuth = () =>  (\r\n\r\n    <div>\r\n      \r\n     \r\n\r\n      <ul>\r\n  \r\n        <li>\r\n            <NavLink exact activeClassName=\"active\" to=\"/\">\r\n              Home\r\n            </NavLink>\r\n         </li>\r\n        <li>\r\n            <NavLink  activeClassName=\"active\" to=\"/signuppage\">\r\n             Sign Up\r\n           </NavLink>\r\n        </li>\r\n        <li>\r\n            <NavLink  activeClassName=\"active\" to=\"/signinpage\">\r\n             Sign In\r\n           </NavLink>\r\n        </li>\r\n        \r\n        \r\n      </ul>\r\n     \r\n        \r\n    </div>\r\n  \r\n  );\r\n\r\n\r\n  export default Navigation;","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\toolbar\\Toolbar.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"import React,{ Component } from 'react'\r\nimport './Toolbar.css'\r\n\r\nimport { MathfieldComponent } from 'react-mathlive'\r\nimport Mathlive from 'mathlive'\r\nimport { Mathfield, MathfieldElement } from 'mathlive'\r\n \r\n//imports for CodeBlock\r\nimport * as ace from 'ace-builds/src-noconflict/ace';\r\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\r\nimport 'ace-builds/src-min-noconflict/theme-tomorrow_night_eighties';\r\nimport 'ace-builds/src-min-noconflict/mode-javascript';\r\nimport 'ace-builds/src-min-noconflict/mode-java';\r\nimport 'ace-builds/src-min-noconflict/mode-c_cpp';\r\nimport 'ace-builds/src-min-noconflict/mode-python';\r\nimport $ from \"jquery\";\r\n\r\n//Material UI Imports\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport FunctionsIcon from '@material-ui/icons/Functions';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBarDrawer from \"../Navigation/AppBarDrawer\";\r\nimport App from \"../../App\";\r\n//saving\r\nimport { withFirebase } from '../Firebase';\r\nimport Firebase from '../Firebase/firebase.js';\r\nimport firebase from 'firebase';\r\nimport user from '../UserInfo/userInfo';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > svg': {\r\n            margin: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function ToolbarInner() {\r\n    \r\n    function format(com, val) {\r\n        document.getElementById('editor').focus();\r\n        document.execCommand(com, false, val);\r\n    }\r\n\r\n    function bulletPoint() {\r\n        format('insertHTML', `<ul><li class=\"bulletList\"></li></ul>`);\r\n    }\r\n\r\n    //Sets the url input box to shown or hidden\r\n    function addLink() {\r\n        const show = document.getElementById('url-input');\r\n        if (show.classList.contains('hidden')) {\r\n            show.classList.remove('hidden');\r\n        } else {\r\n            show.classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    function setUrl() {\r\n        //Stores the input from the url box into inputVal\r\n        var inputVal = document.getElementById('textFormatUrl').value;\r\n        \r\n        //Text is used for creating a hyperlink\r\n        const text = document.getSelection();\r\n        \r\n        //used for showing or hiding url input box\r\n        const show = document.getElementById('url-input');\r\n        if(inputVal.substr(0,1) === \" \"){\r\n            inputVal = inputVal.substr(1);\r\n        }\r\n        //Appends http:// to the url if the input did not have it to begin with\r\n        var prefix1 = 'http://';\r\n        var prefix2 = 'https://';\r\n        if ((inputVal.substr(0, prefix1.length) !== prefix1) && (inputVal.substr(0, prefix2.length) !== prefix2)){\r\n            \r\n            inputVal = prefix2 + inputVal;\r\n        }\r\n        \r\n        /**\r\n         * This block handles url insert. text.baseNode.data==undefined checks to see if the user\r\n         * is trying to insert only a url and NOT create a hyper link.  Else handles creating the hyperlink.\r\n         * A hyperlink is created by first clicking the url button, then paste your url in the input box,\r\n         * then highlight the text you want to turn into a hyperlink and then press the check mark button. \r\n         */\r\n        if (text.baseNode.data === undefined) {\r\n            format(\r\n                'insertHTML', `<a href='${inputVal}' target='_blank'>${inputVal}</a>`\r\n            );\r\n        } else {\r\n            format(\r\n                'insertHTML', `<a href='${inputVal}' target='_blank'>${text}</a>`\r\n            );\r\n        }\r\n\r\n        //This makes the url input tag blank again. I could use \"\" or '' but JS thinks strings are the same as null\r\n        document.getElementById('textFormatUrl').value = \" \";\r\n\r\n        //hides the input tag again \r\n        show.classList.add('hidden');\r\n    }\r\n\r\n    function setHeader() {\r\n        const target = document.getSelection();\r\n        format('insertHTML', `<h2>${target}</h2>`);\r\n    }\r\n\r\n    ////////////////////////////////////////\r\n    //Vito is working on this\r\n\r\n    //openmenu for code block\r\n    function openMenu() {\r\n        document.getElementById(\"dropdown\").classList.toggle(\"active\");\r\n    }\r\n\r\n    \r\n\r\n    //Main function to create new code block\r\n    function addCodeBlock(lang) {\r\n        //creating new filled div\r\n        var next_line = document.getElementById('editor');\r\n        \r\n        alert(\" Language chosen for codeblock is: \"+lang);\r\n        format(\r\n            'insertParagraph',\r\n            `<pre class='editor' id='${next_line}'</pre>`\r\n        );\r\n        const codeBlock = document.createElement('pre');\r\n        const target = document.getSelection();\r\n        /*\r\n        if (\r\n            target.focusNode.nodeName.includes('#text') ||\r\n            target.focusNode.classList.contains('title') ||\r\n            target.focusNode.className.includes('codeBlock')\r\n        ) {\r\n            return\r\n        }\r\n        */\r\n        const id = `codeBlock-${document.getElementsByClassName('codeBlock').length + 1}`;\r\n        codeBlock.classList.add('codeBlock');\r\n        \r\n\r\n        var new_block = format(\r\n            'insertHTML',\r\n            `<pre class='codeBlock' id='${id}'>${target}</pre>`\r\n        );\r\n        \r\n        //Embedding Ace editor\r\n        var mode_name = \"ace/mode/\"+lang;\r\n        ace.require(\"ace/ext/language_tools\");\r\n        var code_editor = ace.edit(id, {\r\n            theme: \"ace/theme/tomorrow_night_eighties\",\r\n            mode: mode_name,\r\n            minLines: 2,\r\n            maxLines: 30,\r\n            wrap: true,\r\n            autoScrollEditorIntoView: true,    \r\n        });\r\n\r\n        code_editor.setOptions({\r\n            fontSize: '12pt',\r\n            enableBasicAutocompletion: true,\r\n            enableSnippets: true,\r\n            enableLiveAutocompletion: true\r\n        });\r\n\r\n        addLineAfterBlock(id);\r\n    }\r\n\r\n    \r\n    //experimenting to fix a dumb bug when trying to delete the code block\r\n   /* function deleteBlock(){\r\n        const codeBlock = document.getElementsByTagName(\"pre\");\r\n        const target = document.getSelection();\r\n        \r\n        \r\n        const id='';\r\n        $(document).ready(function(){\r\n            $(document).click(function(){\r\n            \r\n            });\r\n        });\r\n        \r\n        const code_editor=ace.edit(id);\r\n        code_editor.destroy();\r\n        code_editor.container.remove();\r\n    }*/\r\n    \r\n    function addLineAfterBlock(id) {\r\n        const block = document.getElementById(`${id}`);\r\n        const div = document.createElement('div');\r\n        const br = document.createElement('br');\r\n\r\n        div.appendChild(br);\r\n        if (!block) {\r\n            return;\r\n        } else {\r\n            block.after(div);\r\n        }\r\n    }\r\n    \r\n    function handleSave() {\r\n        \r\n          //firebase.initializeApp(config);\r\n\r\n        var content = document.getElementById('editor').innerHTML;\r\n        \r\n       const itemsRef= firebase.database().ref('items');\r\n       var childRef = itemsRef.child(user.name);\r\n       childRef.update({\r\n           editor: content\r\n       })\r\n                \r\n    }\r\n    \r\n    ////////////////////////////////////////////////////////\r\n\r\n    //Emily working on this. Uses the Mathlive library and API\r\n    function addEquation() {\r\n\r\n        //Focus on editor, insert line\r\n        document.getElementById('editor').focus();\r\n        var next_line = document.getElementById('editor');\r\n        format(\r\n            'insert',\r\n            `<pre class='editor' id='${next_line}'</pre>`\r\n        );\r\n\r\n        //Create new math block element\r\n        const mathBlock = new MathfieldElement();\r\n\r\n        //set initial value and options. Changing this will\r\n        //change what the initial math equation looks like upon adding\r\n        //Currently empty\r\n        mathBlock.setValue(\"\");\r\n\r\n        //Chunk of code setting math block options and attributes\r\n        mathBlock.setOptions({\r\n            virtualKeyboardMode: \"manual\",\r\n            virtualKeyboards: \"all\",\r\n            virtualKeyboardTheme: \"\",\r\n            virtualKeyboardLayout: \"auto\",\r\n            virtualKeyboardToolbarOptions: \"default\",\r\n            smartMode: true,\r\n            smartFence: true,\r\n            resetStyle: true,\r\n            selectionMode: \"beforeend\",\r\n        });\r\n        mathBlock.setAttribute(\"resetStyle\", \"true\");\r\n        mathBlock.setAttribute(\"id\",\r\n            `mathBlock-${document.getElementsByClassName('mathBlock').length + 1}`);\r\n        const id = mathBlock.id;\r\n        mathBlock.setAttribute(\"class\", 'mathBlock');\r\n\r\n        //Added event listener for when you exit out of math block using arrow\r\n        //key\r\n        mathBlock.addEventListener('focus-out', (ev) => {\r\n            if (ev.detail.direction === \"forward\") {\r\n\r\n                document.getElementById('editor').focus();\r\n                var next_line = document.getElementById('editor');\r\n                format(\r\n                    'insert',\r\n                    `<pre class='editor' id='${target}'</pre>`\r\n                );\r\n            } else if (ev.detail.direction === \"backward\") {\r\n                document.getElementById('editor').focus();\r\n            }\r\n        });\r\n\r\n        //Event Listener to change math block value when there is user input\r\n        mathBlock.addEventListener('input', (ev) => {\r\n            mathBlock.setValue(ev.target.value);\r\n        })\r\n\r\n        const target = document.getSelection();\r\n\r\n        //Checking if valid location to place a math block\r\n        if (\r\n            target.focusNode.nodeName.includes('#text') ||\r\n            target.focusNode.classList.contains('title') ||\r\n            target.focusNode.className.includes('mathBlock')\r\n        ) {\r\n            return\r\n        }\r\n\r\n        //Focuses back on editor, and then inserts a block at\r\n        //the cursor using added function insertBlockAtCursor\r\n        const ellie = document.getElementById('editor');\r\n        document.getElementById('editor').focus();\r\n        insertBlockAtCursor(mathBlock, target);\r\n\r\n        /*\r\n            //Block of comments to test out different methods of inserting\r\n            //blocks and text elements\r\n\r\n            //const texty = document.createTextNode(\"hello world!\");\r\n            //const spanny = document.createElement('span');\r\n            //const t = document.createTextNode(\"This is a span element\");\r\n            //spanny.appendChild(t);\r\n            //ellie.appendChild(spanny);\r\n            //document.body.appendChild(spanny);\r\n            //insertTextAtCaret(spanny);\r\n\r\n        */\r\n        document.getElementById(id).focus();\r\n        /* Original format/executeCommand function. Does not appear to\r\n            be functional in the context of a <math-field> element\r\n        format('insert',\r\n                    `<pre class=\"mathBlock\" id=\"${id}\">${target}</pre>`\r\n                );\r\n        */\r\n\r\n        //If you comment out this line suddenly allows text editing to\r\n        //the right of the math field. Will hold off on text to side of\r\n        //until inline equation is figured out\r\n        addLineAfterBlock(id);\r\n\r\n    }\r\n\r\n\r\n    //Method to handle Tab and Enter button press (Emily)\r\n    function keyHandle(evt) {\r\n        const key = evt.keyCode;\r\n        switch (key) {\r\n            case 9: //Tab\r\n                insertTextAtCursor('\\t');\r\n                evt.preventDefault();\r\n                break;\r\n            case 13: //Enter\r\n                insertTextAtCursor('\\n');\r\n                evt.preventDefault();\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Inserts text block at current cursor position (Emily)\r\n    function insertTextAtCursor(text) {\r\n        var sel, range;\r\n        sel = window.getSelection();\r\n        range = sel.getRangeAt(0);\r\n        range.deleteContents();\r\n        range.insertNode(document.createTextNode(text));\r\n    }\r\n\r\n    //Inserts an inline-block element at current cursor position (Emily)\r\n    function insertBlockAtCursor(block, target) {\r\n        var range;\r\n        range = target.getRangeAt(0);\r\n        range.deleteContents();\r\n        range.insertNode(block);\r\n    }\r\n\r\n    //Experiment method to perform a different text insertion at cursor (Emily)\r\n    function insertTextAtCaret(text) {\r\n        var sel, range;\r\n        if (window.getSelection) {\r\n            sel = window.getSelection();\r\n            if (sel.getRangeAt && sel.rangeCount) {\r\n                range = sel.getRangeAt(0);\r\n                range.deleteContents();\r\n                range.insertNode(document.createTextNode(text));\r\n            }\r\n        } else if (document.selection && document.selection.createRange) {\r\n            document.selection.createRange().text = text;\r\n        }\r\n    }\r\n\r\n    //Save selection before you insert an element (Emily)\r\n    function saveSelection(sel) {\r\n        if (window.getSelection) {\r\n            sel = window.getSelection();\r\n            if (sel.getRangeAt && sel.rangeCount) {\r\n                return sel.getRangeAt(0);\r\n            }\r\n        } else if (document.selection && document.selection.createRange) {\r\n            return document.selection.createRange();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //Restore the previously saved selection (Emily)\r\n    function restoreSelection(range, sel) {\r\n        if (range) {\r\n            if (window.getSelection) {\r\n                sel = window.getSelection();\r\n                sel.removeAllRanges();\r\n                sel.addRange(range);\r\n            } else if (document.selection && range.select) {\r\n                range.select();\r\n            }\r\n        }\r\n    }\r\n\r\n    //Insert HTML directly at caret position. Basically another\r\n    //experimental method to test out insertion of elements at\r\n    //cursor in doc (Emily)\r\n    function pasteHtmlAtCaret(html, selectPastedContent) {\r\n        var sel, range;\r\n        if (window.getSelection) {\r\n            // IE9 and non-IE\r\n            sel = window.getSelection();\r\n            if (sel.getRangeAt && sel.rangeCount) {\r\n                range = sel.getRangeAt(0);\r\n                range.deleteContents();\r\n\r\n                // Range.createContextualFragment() would be useful here but is\r\n                // only relatively recently standardized and is not supported in\r\n                // some browsers (IE9, for one)\r\n                var el = document.createElement(\"div\");\r\n                el.innerHTML = html;\r\n                var frag = document.createDocumentFragment(), node, lastNode;\r\n                while ((node = el.firstChild)) {\r\n                    lastNode = frag.appendChild(node);\r\n                }\r\n                var firstNode = frag.firstChild;\r\n                range.insertNode(frag);\r\n\r\n                // Preserve the selection\r\n                if (lastNode) {\r\n                    range = range.cloneRange();\r\n                    range.setStartAfter(lastNode);\r\n                    if (selectPastedContent) {\r\n                        range.setStartBefore(firstNode);\r\n                    } else {\r\n                        range.collapse(true);\r\n                    }\r\n                    sel.removeAllRanges();\r\n                    sel.addRange(range);\r\n                }\r\n            }\r\n        } else if ((sel = document.selection) && sel.type !== \"Control\") {\r\n            // IE < 9\r\n            var originalRange = sel.createRange();\r\n            originalRange.collapse(true);\r\n            sel.createRange().pasteHTML(html);\r\n            if (selectPastedContent) {\r\n                range = sel.createRange();\r\n                range.setEndPoint(\"StartToStart\", originalRange);\r\n                range.select();\r\n            }\r\n        }\r\n    }\r\n        function changeFont(fontName) {\r\n        const selectedFont = fontName.target.value;\r\n        document.execCommand(\"fontName\", false, selectedFont);\r\n    }\r\n\r\n    function changeFSize(Size){\r\n        const FSize = Size.target.value;\r\n        document.execCommand(\"fontSize\", false, FSize);\r\n    }\r\n\r\n\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n\r\n\r\n    return (\r\n            <div className='toolbar'>\r\n                <div class=\"tooltip container\">\r\n                    <span class=\"tooltiptext\">Bold</span>\r\n                    <button class={\"bar\"} onClick={e => format('bold')}>\r\n                        <FormatBoldIcon/>\r\n                    </button>\r\n                </div>\r\n                <div class=\"tooltip container\">\r\n                    <span class=\"tooltiptext\">Italicize</span>\r\n                    <button class={\"bar\"} onClick={e => format('italic')}>\r\n                        <FormatItalicIcon/>\r\n                    </button>\r\n                </div>\r\n                <div class=\"tooltip container\">\r\n                    <span class=\"tooltiptext\">List</span>\r\n                    <button class={\"bar\"} onClick={e => bulletPoint()}>\r\n                        <FormatListBulletedIcon/>\r\n                    </button>\r\n                </div>\r\n                     <div className=\"container\">\r\n        <select onChange={changeFont}>\r\n            <option value=\"Arial\">Arial</option>\r\n            <option value=\"Calibri\">Calibri</option>\r\n            <option value=\"Comic Sans MS\">Comic Sans MS</option>\r\n            <option value=\"Times New Roman\">Times New Roman</option>\r\n        </select>\r\n        <select onChange={changeFSize}>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"4\">4</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"6\">6</option>\r\n            <option value=\"7\">7</option>\r\n        </select>\r\n            </div>\r\n\r\n                <div class=\"tooltip container\">\r\n                    <span class=\"tooltiptext\">Hyperlink</span>\r\n                    <button class={\"bar\"} onClick={e => addLink()}>\r\n                        <InsertLinkIcon/>\r\n                    </button>\r\n                </div>\r\n\r\n                <div id='url-input' className='hidden container'>\r\n                    <input id='textFormatUrl' placeholder='url' />\r\n                    <button class={\"bar\"} onClick={e => setUrl(e)}>\r\n                        <CheckIcon/>\r\n                    </button>\r\n                </div>\r\n                <div class=\"tooltip container\">\r\n                    <span class=\"tooltiptext\">Header</span>\r\n                    <button class={\"bar\"} onClick={e => setHeader()}>\r\n                        <TextFieldsIcon/>\r\n                    </button>\r\n                </div>\r\n                <div class=\"tooltip container\">\r\n                <span class=\"tooltiptext\">Code Block</span>\r\n                <button class={\"bar\"} onClick={e => openMenu()}>\r\n                    <CodeIcon />\r\n                    <ul id=\"dropdown\">\r\n                    <li onClick={e => addCodeBlock(\"javascript\")} >Javascript</li>\r\n                    <li onClick={e => addCodeBlock(\"java\")}>Java</li>\r\n                    <li onClick={e => addCodeBlock(\"python\")}>Python</li>\r\n                    <li onClick={e => addCodeBlock(\"c_cpp\")}>C++</li>\r\n                </ul>\r\n                </button>\r\n            </div>\r\n                <div class=\"tooltip container\">\r\n                    <span class=\"tooltiptext\">Equation</span>\r\n                    <button class={\"bar\"} onClick={e => addEquation()}>\r\n                        <FunctionsIcon/>\r\n                    </button>\r\n                </div>\r\n                <div class=\"tooltip container\">\r\n                    <span class=\"tooltiptext\">Save</span>\r\n                    <button class={\"bar\"} onClick={e => handleSave()}>\r\n                        <SaveAltIcon/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n}","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\editor\\Editor.js",["119","120"],"import React from 'react';\r\nimport ToolbarInner from '../toolbar/Toolbar'\r\nimport './Editor.css';\r\nimport AppBarDrawer from \"../Navigation/AppBarDrawer\";\r\n\r\n//Editor function\r\nexport default function Editor() {\r\n\r\n    function paste(e) {\r\n        e.preventDefault();\r\n        const open = new RegExp('<', 'gi');\r\n        const close = new RegExp('>', 'gi');\r\n        const text = (e.originalEvent || e).clipboardData\r\n            .getData('text/plain')\r\n            .replace(open, '&lt')\r\n            .replace(close, '&gt');\r\n        document.execCommand('insertHTML', false, text)\r\n\r\n    }\r\n\r\n    //Return the content from Toolbar and Editor this goes to App.js\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div class={\"wrap\"}>\r\n                <div\r\n                    id='title'\r\n                    contentEditable='true'\r\n                    data-placeholder='Title...'\r\n                    className='title'\r\n                ></div>\r\n                <div\r\n                    className='editor'\r\n                    id='editor'\r\n                    contentEditable='true'\r\n                    data-placeholder='Body...'\r\n                    onPaste={(e) => paste(e)}\r\n                ></div>\r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\SignUp\\index.js",["121","122"],"import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nimport firebase from 'firebase';\r\nimport user from '../UserInfo/userInfo'\r\n//implementation of sign up functionality\r\n//successfull sign up will take you to the homepage\r\n\r\nconst SignUp = () => (\r\n  <div>\r\n   \r\n     <SignUpForm />\r\n    \r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n    content:\" it's working\"\r\n  };\r\n \r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n \r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n \r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        \r\n        //set initial structure in database\r\n        user.name= this.state.email.split('@')[0];\r\n        \r\n        const itemsRef= firebase.database().ref('items/'+user.name);\r\n        itemsRef.set({\r\n            fullName: this.state.username,\r\n            editor:'the account is first created'\r\n          \r\n        })\r\n\r\n        this.setState({ ...INITIAL_STATE });\r\n        //redirects user after a successful sign-in back to the home page\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n \r\n    event.preventDefault();\r\n \r\n  }\r\n \r\n  \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const {\r\n        username,\r\n        email,\r\n        passwordOne,\r\n        passwordTwo,\r\n        error,\r\n        content\r\n      } = this.state;\r\n\r\n    const isInvalid =\r\n    passwordOne !== passwordTwo ||\r\n    passwordOne === '' ||\r\n    email === '' ||\r\n    username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n         <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <button disabled={isInvalid} type = \"submit\">Sign Up </button>\r\n \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <NavLink  activeClassName=\"active\" to=\"/signuppage\">Sign Up</NavLink>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\n \r\nexport default SignUp;\r\n \r\nexport { SignUpForm, SignUpLink };","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\SignIn\\index.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\PasswordForget\\index.js",["123"],"import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n \r\nimport { withFirebase } from '../Firebase';\r\n\r\n \r\nconst PasswordForget = () => (\r\n  <div>\r\n    \r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n \r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n \r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n \r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n \r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        //notify user that they will recieve an email to reset their password\r\n        alert(\"A link to reset your password has been sent to the email address associated with your account.\");\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n        \r\n      });\r\n \r\n    event.preventDefault();\r\n  };\r\n \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const { email, error } = this.state;\r\n \r\n    const isInvalid = email === '';\r\n \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <NavLink  activeClassName=\"active\" to=\"/passwordpage\">Forgot your password?</NavLink>\r\n  </p>\r\n);\r\n \r\nexport default PasswordForget;\r\n \r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n \r\nexport { PasswordForgetForm, PasswordForgetLink };","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\Navigation\\AppBarDrawer.js",["124","125","126","127","128","129","130","131"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\n\r\n//Nav Imports\r\nimport { NavLink } from 'react-router-dom'\r\nimport SignOutButton from '../SignOut';\r\n\r\n//Import Toolbar\r\nimport ToolbarInner from '../toolbar/Toolbar';\r\nimport '../toolbar/Toolbar.css';\r\n\r\n//Import Editor\r\nimport Editor from '../editor/Editor'\r\nimport '../editor/Editor.css';\r\nimport {Edit, Home} from \"@material-ui/icons\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        background: '#212121',\r\n\r\n    },\r\n\r\n    drawerButton: {\r\n        color: 'white',\r\n    },\r\n\r\n    appBar: {\r\n        background: 'linear-gradient(45deg, #F4976C 30%, #FBE8A6 90%)',\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        color: 'white',\r\n    },\r\n\r\n    signOutButton: {\r\n        color: \"white\",\r\n    },\r\n\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n\r\n    dividerColor: {\r\n      light: true,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        height: \"auto\",\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        backgroundColor: '#212121',\r\n        color: '#212121',\r\n\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n        color: \"white\",\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        marginTop: 115,\r\n        marginRight: 20,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        marginTop: 115,\r\n        marginRight: 20,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n\r\n    headerCloseDrawer: {\r\n        justifySelf: \"flex-end\",\r\n    }\r\n\r\n}));\r\n\r\nexport default function AppBarDrawer() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Note Flow\r\n                    </Typography>\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}\r\n                >\r\n                    Menu\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon className={classes.drawerButton}/> : <ChevronRightIcon className={classes.drawerButton} />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List className={classes.drawerPaper}>\r\n\r\n                    <ListItem button key={'Sign Out'}>\r\n                        <ListItemIcon > <SignOutButton style=\"color:#FBE8A6;\"/></ListItemIcon>\r\n                    </ListItem>\r\n\r\n                    <NavLink exact activeClassName=\"active\" to=\"/\">\r\n                        <ListItem className={classes.drawerButton} button={true} key={'Home'}>\r\n                                <ListItemIcon className={classes.drawerButton}> <AccountCircleIcon /></ListItemIcon>\r\n                                <ListItemText primary={'Home'}/>\r\n                        </ListItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink  activeClassName=\"active\" to=\"/editor\">\r\n                        <ListItem className={classes.drawerButton} button key={'Editor'}>\r\n                            <ListItemIcon className={classes.drawerButton}> <EditIcon /> </ListItemIcon>\r\n                            <ListItemText primary={'Editor'} />\r\n                        </ListItem>\r\n                    </NavLink>\r\n\r\n                    <ListItem className={classes.drawerButton} button key={'BarChartIcon'}>\r\n                        <ListItemIcon className={classes.drawerButton} > <BarChartIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Diagrams'} />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider color={\"white\"} />\r\n                <List className={classes.drawerPaper}>\r\n                    <ListItem className={classes.drawerButton} button key={'All Files'} >\r\n                        <ListItemIcon className={classes.drawerButton}> <FolderIcon/> </ListItemIcon>\r\n                        <ListItemText primary={'All Files'} />\r\n                    </ListItem>\r\n\r\n                    <ListItem className={classes.drawerButton} button key={'Tags'}>\r\n                        <ListItemIcon className={classes.drawerButton}> <LocalOfferIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Tags'} />\r\n                    </ListItem>\r\n\r\n                    <ListItem className={classes.drawerButton} button key={'Important'}>\r\n                        <ListItemIcon className={classes.drawerButton}> <StarsIcon /> </ListItemIcon>\r\n                        <ListItemText primary={'Important'} />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n\r\n        </div>\r\n    );\r\n}","C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\SignOut\\index.js",[],"C:\\Users\\sassy_000\\Documents\\note-flow\\src\\components\\UserInfo\\userInfo.js",["132","133"],"import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\nvar user ={\r\n    username: '',\r\n    content:''\r\n};\r\nexport default user;\r\n\r\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":16},{"ruleId":"138","severity":1,"message":"142","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":21},{"ruleId":"138","severity":1,"message":"143","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"144","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":28},{"ruleId":"138","severity":1,"message":"145","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":16},{"ruleId":"138","severity":1,"message":"146","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":19},{"ruleId":"138","severity":1,"message":"147","line":16,"column":8,"nodeType":"140","messageId":"141","endLine":16,"endColumn":9},{"ruleId":"138","severity":1,"message":"148","line":28,"column":8,"nodeType":"140","messageId":"141","endLine":28,"endColumn":15},{"ruleId":"138","severity":1,"message":"149","line":30,"column":8,"nodeType":"140","messageId":"141","endLine":30,"endColumn":20},{"ruleId":"138","severity":1,"message":"150","line":31,"column":8,"nodeType":"140","messageId":"141","endLine":31,"endColumn":11},{"ruleId":"138","severity":1,"message":"151","line":33,"column":10,"nodeType":"140","messageId":"141","endLine":33,"endColumn":22},{"ruleId":"138","severity":1,"message":"152","line":34,"column":8,"nodeType":"140","messageId":"141","endLine":34,"endColumn":16},{"ruleId":"138","severity":1,"message":"153","line":41,"column":7,"nodeType":"140","messageId":"141","endLine":41,"endColumn":16},{"ruleId":"138","severity":1,"message":"154","line":155,"column":13,"nodeType":"140","messageId":"141","endLine":155,"endColumn":22},{"ruleId":"138","severity":1,"message":"155","line":273,"column":21,"nodeType":"140","messageId":"141","endLine":273,"endColumn":30},{"ruleId":"138","severity":1,"message":"156","line":301,"column":15,"nodeType":"140","messageId":"141","endLine":301,"endColumn":20},{"ruleId":"138","severity":1,"message":"157","line":335,"column":14,"nodeType":"140","messageId":"141","endLine":335,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":337,"column":9,"nodeType":"160","messageId":"161","endLine":346,"endColumn":10},{"ruleId":"138","severity":1,"message":"162","line":367,"column":14,"nodeType":"140","messageId":"141","endLine":367,"endColumn":31},{"ruleId":"138","severity":1,"message":"163","line":382,"column":14,"nodeType":"140","messageId":"141","endLine":382,"endColumn":27},{"ruleId":"138","severity":1,"message":"164","line":395,"column":14,"nodeType":"140","messageId":"141","endLine":395,"endColumn":30},{"ruleId":"138","severity":1,"message":"165","line":410,"column":14,"nodeType":"140","messageId":"141","endLine":410,"endColumn":30},{"ruleId":"138","severity":1,"message":"166","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"149","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":20},{"ruleId":"138","severity":1,"message":"167","line":36,"column":13,"nodeType":"140","messageId":"141","endLine":36,"endColumn":21},{"ruleId":"138","severity":1,"message":"168","line":76,"column":9,"nodeType":"140","messageId":"141","endLine":76,"endColumn":16},{"ruleId":"138","severity":1,"message":"169","line":2,"column":19,"nodeType":"140","messageId":"141","endLine":2,"endColumn":29},{"ruleId":"138","severity":1,"message":"170","line":18,"column":8,"nodeType":"140","messageId":"141","endLine":18,"endColumn":17},{"ruleId":"138","severity":1,"message":"171","line":19,"column":8,"nodeType":"140","messageId":"141","endLine":19,"endColumn":16},{"ruleId":"138","severity":1,"message":"172","line":20,"column":8,"nodeType":"140","messageId":"141","endLine":20,"endColumn":16},{"ruleId":"138","severity":1,"message":"166","line":34,"column":8,"nodeType":"140","messageId":"141","endLine":34,"endColumn":20},{"ruleId":"138","severity":1,"message":"173","line":38,"column":8,"nodeType":"140","messageId":"141","endLine":38,"endColumn":14},{"ruleId":"138","severity":1,"message":"174","line":40,"column":9,"nodeType":"140","messageId":"141","endLine":40,"endColumn":13},{"ruleId":"138","severity":1,"message":"175","line":40,"column":15,"nodeType":"140","messageId":"141","endLine":40,"endColumn":19},{"ruleId":"176","severity":1,"message":"177","line":192,"column":56,"nodeType":"178","endLine":192,"endColumn":78},{"ruleId":"138","severity":1,"message":"179","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"143","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'SignOutButton' is defined but never used.","'Component' is defined but never used.","'MathfieldComponent' is defined but never used.","'Mathlive' is defined but never used.","'Mathfield' is defined but never used.","'$' is defined but never used.","'SvgIcon' is defined but never used.","'AppBarDrawer' is defined but never used.","'App' is defined but never used.","'withFirebase' is defined but never used.","'Firebase' is defined but never used.","'useStyles' is assigned a value but never used.","'new_block' is assigned a value but never used.","'next_line' is assigned a value but never used.","'ellie' is assigned a value but never used.","'keyHandle' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'insertTextAtCaret' is defined but never used.","'saveSelection' is defined but never used.","'restoreSelection' is defined but never used.","'pasteHtmlAtCaret' is defined but never used.","'ToolbarInner' is defined but never used.","'username' is assigned a value but never used.","'content' is assigned a value but never used.","'withRouter' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'HomeIcon' is defined but never used.","'Editor' is defined but never used.","'Edit' is defined but never used.","'Home' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]